[project]
name = "pyplanc"
version = "0.0.1"
requires-python = ">=3.10"


[build-system]
requires = ["scikit-build-core>=0.9", "pybind11", "numpy"]
build-backend = "scikit_build_core.build"

[tool]
rye = {}

[tool.scikit-build]
minimum-version = "0.9"
build-dir = "build"


[tool.scikit-build.cmake]
version = ">=3.16"
#[tool.scikit-build.cmake.define]
#CMAKE_TOOLCHAIN_FILE = "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/vcpkg/scripts/buildsystems/vcpkg.cmake"

[tool.cibuildwheel]
build-frontend = "build[uv]"
skip = ["*-win32", "*-manylinux*_i686", "*-musllinux*_i686", "pp*-win_*"]

[tool.cibuildwheel.macos]
before-all = ["curl -LsSf https://astral.sh/uv/install.sh | sh",
              "git clone https://github.com/microsoft/vcpkg.git",
              "chmod +x ./vcpkg/bootstrap-vcpkg.sh && ./vcpkg/bootstrap-vcpkg.sh"]
before-build = "brew install autoconf automake"
test-command = "echo 'installed'"
repair-wheel-command = "DYLD_LIBRARY_PATH=/Users/runner/work/planc/planc/build/lib/ delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.15"
SKBUILD_CMAKE_DEFINE="CMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake;VCPKG_BUILD_TYPE=release"
[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
environment.MACOSX_DEPLOYMENT_TARGET="11"
environment.SKBUILD_CMAKE_DEFINE="CMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake;VCPKG_BUILD_TYPE=release"

[tool.cibuildwheel.linux]
before-all = "yum install -y epel-release && yum install -y hdf5-devel openblas-devel"
test-command = "echo 'installed'"
repair-wheel-command = "LD_LIBRARY_PATH=/project/build/lib/ auditwheel repair -w {dest_dir} {wheel}"
manylinux-x86_64-image = "manylinux_2_28"
manylinux-pypy_x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
manylinux-pypy_aarch64-image = "manylinux_2_28"
musllinux-x86_64-image = "musllinux_1_2"
musllinux-aarch64-image = "musllinux_1_2"

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = "apk add hwloc-dev armadillo-dev openblas-dev"

[[tool.cibuildwheel.overrides]]
select = "*-manylinux*"
environment = {SKBUILD_CMAKE_DEFINE="CBLAS_H_DIR=/usr/include/openblas/"}

[tool.cibuildwheel.windows]
before-all = ["pipx install uv"]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel} --add-path .\\build\\nmf\\Release"
test-command = "echo 'installed'"
[tool.cibuildwheel.windows.environment]
SKBUILD_CMAKE_DEFINE="CMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake;VCPKG_BUILD_TYPE=release"
